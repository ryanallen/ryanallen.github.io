.shell {
	@include			     flex(1);      ///	flex1
    background: {             /// : needs to replace the - for nested properties
      color:        $color1;
      image:        url(#{$img-path}stars.svg);
    }
	height:            100%;         /// makes for no scrolling
	///padding:           $rem2;        /// 14px
}

.frame {
	@include			    flex(1);		             /// flex1
  background-image: url(#{$img-path}planet-comet.svg);
  background-repeat: no-repeat;
	flex-direction:		column;		               /// flexbox stacks vertically in a column
	///padding:		      $rem2;		               /// sets the size of the frame
}

.space {
  @include          scene(2); /// flexbox unit is 2
  padding:          $rem2 $rem2 0;        /// 14px
}

.scenery {
  @include          flex(12);        /// sets size of the container
  flex-direction:   column;          /// vertically stacks choice buttons
  justify-content:  flex-end;          /// centers chat box
  margin-bottom:    10vmin;
}

.chat {
  display:          flex;           /// 7 units - no include to keep it from growing
  align-items:      center;         /// vertically align text
  justify-content:  center;         /// centers text on the x axis
  background-color: $color7;
  padding:          5vmin;          /// relative to keep text from fighting with edges
  margin:           0 -1px 0 $rem1; /// aligned with buttons, negative to fix svg tearing 
                                    /// in webkit shaboy!
}

.chat-arrow {
  @include        flex(1);
  background-image:     url(#{$img-path}chat-arrow.svg);
  background-position:  bottom;
  background-repeat:    no-repeat;
  margin-bottom:        10vmin;

}

.character {
  @include              flex(4);
  background-image:     url(#{$img-path}astronaut-ryan.svg);
  background-position:  bottom;
  background-repeat:    no-repeat;
  margin-top:           2vmin;  /// top buffer
}

///////////////
/// CHOICES ///
///////////////
  

.choices {
  @include          flex(1);  /// container fills all space
}

.choice-button-container {
  @include        flex(4);  /// flex units 4 (separates left and right buttons)
  flex-direction: column;   /// vertically stacks choice buttons
}

.button {
  @include          flex(1);                  /// button fills the box
  align-items:      center;                   /// centers text on the y axis
  background-color: $color2;
  justify-content:  center;                   /// centers text on the x axis
  color:            hsl(0,0,70);
    &:hover { background-color: $color3;}     /// nested sass parent selctor for hover effect
}

.button_cta {
  @extend                       .button;  /// .button is base
  background-color:             $color3;  /// this is set in .import.scss
    &:hover { background-color: $color4;} /// brighter than normal button hover
}